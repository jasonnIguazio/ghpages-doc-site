<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Data-Layer APIs on Iguazio MLOps Platform Documentation</title><link>https://github.com/jasonnIguazio/ghpages-doc-site/data-layer/apis/</link><description>Recent content in The Data-Layer APIs on Iguazio MLOps Platform Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://github.com/jasonnIguazio/ghpages-doc-site/data-layer/apis/index.xml" rel="self" type="application/rss+xml"/><item><title>API Data Paths</title><link>https://github.com/jasonnIguazio/ghpages-doc-site/data-layer/apis/data-paths/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://github.com/jasonnIguazio/ghpages-doc-site/data-layer/apis/data-paths/</guid><description>Overview The data containers and their contents are referenced differently depending on the programming interface. You need to know how to set the data paths for each interface, as outlined in this guide:
RESTful Web and Management API Data Paths Frames API Data Paths Spark API Data Paths Presto Data Paths File-System Data Paths Predefined Environment Variables The platform's command-line services (Jupyter Notebook and the web shell) predefine the following environment variables for simplifying access to the running-user directory of the predefined &amp;quot;users&amp;quot; container:</description></item><item><title>Overview of the Data-Layer APIs</title><link>https://github.com/jasonnIguazio/ghpages-doc-site/data-layer/apis/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://github.com/jasonnIguazio/ghpages-doc-site/data-layer/apis/overview/</guid><description>As explained in the data-layer overview, the platform exposes multiple proprietary and third-party application programming interfaces (APIs) for working with different types of data, including data ingestion and preparation, and allows you to access the same data from different interfaces.
The following table shows the provided programming interfaces for working with different types of data in the platform's data store. For full API references, see the data-layer references.
Data Type Interfaces NoSQL (Wide-Column Key/Value) Data The platform's NoSQL data store was built to take advantage of a distributed cluster of physical and virtual machines that use flash memory to deliver in-memory performance while keeping flash economy and density.</description></item></channel></rss>