<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Spark-Streaming Integration Scala API Reference on Iguazio MLOps Platform Documentation</title><link>https://github.com/jasonnIguazio/data-layer/reference/spark-apis/spark-streaming-integration-api/</link><description>Recent content in Spark-Streaming Integration Scala API Reference on Iguazio MLOps Platform Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://github.com/jasonnIguazio/data-layer/reference/spark-apis/spark-streaming-integration-api/index.xml" rel="self" type="application/rss+xml"/><item><title>PayloadWithMetadata Class</title><link>https://github.com/jasonnIguazio/data-layer/reference/spark-apis/spark-streaming-integration-api/payloadwithmetadata/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://github.com/jasonnIguazio/data-layer/reference/spark-apis/spark-streaming-integration-api/payloadwithmetadata/</guid><description>Fully Qualified Name org.apache.spark.streaming.v3io.PayloadWithMetadata
Description A case class that contains decoded stream record data and related metadata.
Summary Instance Constructors
case class PayloadWithMetadata[V]( topicName: String = &amp;#34;&amp;#34;, partitionId: Short = -1, createTimeMs: Long = -1, createTimeNano: Long = -1, recordKey: Long = -1, payload: V = null.asInstanceOf[V]) Instance Constructors Syntax PayloadWithMetadata[V]( topicName: String, partitionId: Short, createTimeMs: Long, createTimeNano: Long, recordKey: Long1, payload: V) Parameters and Data Members NoteThe parameters have default initialization values (such as -1), but any parameter that is intended to be used must be set explicitly.</description></item><item><title>RecordAndMetadata Class</title><link>https://github.com/jasonnIguazio/data-layer/reference/spark-apis/spark-streaming-integration-api/recordandmetadata/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://github.com/jasonnIguazio/data-layer/reference/spark-apis/spark-streaming-integration-api/recordandmetadata/</guid><description>Fully Qualified Name org.apache.spark.streaming.v3io.RecordAndMetadata
Description A case class that represents a platform stream record. The class exposes methods for extracting decoded record data and related metadata.
Summary Instance Constructors
case class RecordAndMetadata[V]( topic: String, partitionId: Short, private val rec: ConsumerRecord, valueDecoder: Decoder[V]) extends Encoding with Logging Methods payload
def payload(): V payloadWithMetadata
def payloadWithMetadata(): PayloadWithMetadata[V] Instance Constructors Syntax RecordAndMetadata[V]( topic: String, partitionId: Short, private val rec: ConsumerRecord, valueDecoder: Decoder[V]) Parameters and Data Members topic The name of the stream that contains the record.</description></item><item><title>Overview of the Spark-Streaming Integration API</title><link>https://github.com/jasonnIguazio/data-layer/reference/spark-apis/spark-streaming-integration-api/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://github.com/jasonnIguazio/data-layer/reference/spark-apis/spark-streaming-integration-api/overview/</guid><description>The platform's Spark-Streaming Integration API provides a way for consuming stream data using the Apache Spark Streaming API. The integration API exposes a V3IOUtil object that contains a createDirectStream method for mapping platform V3IO streams to a Spark input stream. You can use the Spark input streams that you create with this method to consume record data and metadata from platform streams via the Spark Streaming API.
This section documents the platform's Spark-Streaming Integration Scala API for Spark v3.</description></item><item><title>V3IOUtils Object</title><link>https://github.com/jasonnIguazio/data-layer/reference/spark-apis/spark-streaming-integration-api/v3ioutils/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://github.com/jasonnIguazio/data-layer/reference/spark-apis/spark-streaming-integration-api/v3ioutils/</guid><description>Fully Qualified Name org.apache.spark.streaming.v3io.V3IOUtils
Description A singleton utility object for creating Spark input streams that can be used to consume platform stream records via the Spark Streaming API.
V3IO StreamsTo use this object you must first create one or more V3IO streams using the platform's create-stream API. See the CreateStream operation of the Streaming Web API. Summary Prototype
object V3IOUtils Methods createDirectStream
def createDirectStream[ V: ClassTag, VD &amp;lt;: Decoder[V] : ClassTag, R: ClassTag]( ssc: StreamingContext, v3ioParams: Map[String, String], streamNames: Set[String], messageHandler: RecordAndMetadata[V] =&amp;gt; R) : InputDStream[R] Prototype object V3IOUtils createDirectStream Method Creates a Spark input-stream object that can be used to consume record data and metadata from the specified platform streams, using the Spark Streaming API (v3.</description></item></channel></rss>