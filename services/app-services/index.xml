<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Platform's Application Services on Iguazio MLOps Platform Documentation</title><link>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/</link><description>Recent content in The Platform's Application Services on Iguazio MLOps Platform Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/index.xml" rel="self" type="application/rss+xml"/><item><title>Application-Services Overview</title><link>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/overview/</guid><description> Services List To help you locate the services and tools that interest you, following is an alphabetical list with links to relevant documentation:
Dask Docker Registry Elasticsearch Frames Grafana Hadoop Hive Horovod Jupyter Kubeflow Pipelines Log Forwarder Looker MLRun Monitoring MPI Operator Nuclio NumPy pandas Pipelines Presto Prometheus Pyplot PyTorch QlikView RAPIDS scikit-learn Spark Tableau TensorFlow TSDB CLI Web Shell See Also Configuring the DNS Server Working with Services Running Applications over GPUs The Platform Dashboard (UI) Introducing the Platform Logging, Monitoring, and Debugging Data Layer</description></item><item><title>Dask</title><link>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/dask/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/dask/</guid><description>Dask is a parallel-computation Python library that features scaled pandas DataFrames and allows running distributed Python code that performs fast Python based data processing.
You can easily install Dask on your platform cluster — for example, by using pip or Conda. Dask is pre-deployed in the platform's Jupyter Notebook service. You can find examples of using Dask in the platform's tutorial Jupyter notebooks. See specifically the dask-cluster tutorial.
For more information about using Dask in the platform, see Ingesting and Preparing Data.</description></item><item><title>Data Monitoring and Visualization Services and Tools</title><link>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/data-monitoring-and-visualization-services/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/data-monitoring-and-visualization-services/</guid><description>Overview There are various tools that allow you to monitor and query your data and produce graphical interactive representations that make it easy to quickly analyze the data and begin discovering new actionable insights in a matter of seconds, with no programming effort.
Grafana The Grafana open-source platform for data analytics, monitoring, and visualization is pre-integrated in the platform and available as a user application service. NoteIn cloud platform environments, Grafana is currently available as a shared single-instance tenant-wide service.</description></item><item><title>Data Science Automation (MLOps) Services</title><link>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/mlops-services/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/mlops-services/</guid><description>Overview The platform has pre-deployed services for data science and machine-learning operations (MLOps) automation and tracking:
MLRun Kubeflow Pipelines MLRun MLRun is Iguazio's open-source MLOps orchestration framework, which offers an integrative approach to managing machine-learning pipelines from early development through model development to full pipeline deployment in production. MLRun offers a convenient abstraction layer to a wide variety of technology stacks while empowering data engineers and data scientists to define the feature and models.</description></item><item><title>Logging and Monitoring Services</title><link>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/logging-and-monitoring-services/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/logging-and-monitoring-services/</guid><description>The platform features a default (pre-deployed) shared single-instance tenant-wide log-forwarder service (log-forwarder) for forwarding application-service logs to an instance of the Elasticsearch open-source search and analytics engine by using the open-source Filebeat log-shipper utility.
In addition, the platform has a default (pre-deployed) shared single-instance tenant-wide monitoring service (monitoring) for monitoring Nuclio serverless functions and gathering performance statistics and additional data. The platform visualizes data gathered by the monitoring service in predefined Grafana dashboards.</description></item><item><title>The Nuclio Serverless-Functions Service</title><link>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/nuclio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/nuclio/</guid><description>Overview Iguazio's Nuclio Enterprise Edition serverless-functions framework — a leading open-source project for converging and simplifying data management — is integrated into the platform. Nuclio is a high-performance low-latency framework that supports execution over CPUs or GPUs and a wide array of tools and event triggers, providing users with a complete cloud experience of data services, ML, AI, and serverless functionality — all delivered in a single integrated and self-managed offering at the edge, on-premises (&amp;quot;on-prem&amp;quot;), or in a hosted cloud.</description></item><item><title>Python Machine-Learning and Scientific-Computation Packages</title><link>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/python-ds-pkgs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/python-ds-pkgs/</guid><description>The platform's Jupyter Notebook service pre-deploys the pandas open-source Python library for high-performance data processing using structured DataFrames (&amp;quot;pandas DataFrames&amp;quot;). The platform also pre-deploys other Python packages that utilize pandas DataFrames, such the Dask parallel-computation library or Iguazio's V3IO Python SDK and V3IO Frames libraries. You can easily install additional Python machine-learning (ML) and scientific-computation packages — such as TensorFlow, Keras, scikit-learn, PyTorch, Pyplot, and NumPy. The platform's architecture was designed to deploy computation to one or more CPU or GPU with a single Python API.</description></item><item><title>Running Applications over GPUs</title><link>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/gpu/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/gpu/</guid><description>Overview The platform supports accelerated code execution over NVIDIA graphics processing units (GPUs):
You can run Nuclio serverless functions on GPUs.
You can run GPU applications that use one of the following supported GPU libraries from a platform Jupyter Notebook service with the GPU flavor:
Horovod RAPIDS Horovod The platform has a default (pre-deployed) shared single-instance tenant-wide Kubeflow MPI Operator service (mpi-operator), which facilitates Uber's Horovod distributed deep-learning framework.</description></item><item><title>The Hadoop Service</title><link>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/hadoop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/hadoop/</guid><description>The platform provides a self-service and open-source Apache Hadoop framework that makes it easy, fast, and cost-effective to process and analyze vast amounts of data for operational, analytics, and data-engineering needs. The platform's distributed file system (DFS) is an Hadoop Compatible File System (HCFS). You can run Hadoop commands from any platform command-line interface — such as a web-based shell, a Jupyter notebook or terminal, or a Zeppelin notebook — as demonstrated, for example, in the Working with Data Containers tutorial and in the getting-started ingestion examples in the platform's Jupyter tutorial notebook.</description></item><item><title>The Jupyter Notebook Service</title><link>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/jupyter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/jupyter/</guid><description>Overview Jupyter is a project for development of open-source software, standards, and services for interactive computation across multiple programming languages. The Platform comes preinstalled with the JupyterLab web-based user interface, including Jupyter Notebook and JupyterLab Terminals, which are available via a Jupyter Notebook user application service.
Jupyter Notebook is an open-source web application that allows users to create and share documents that contain live code, equations, visualizations, and narrative text; it's currently the leading industry tool for data exploration and training.</description></item><item><title>The MPI-Operator Horovod Service</title><link>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/horovod-mpi-operator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/horovod-mpi-operator/</guid><description> The platform has a default (pre-deployed) shared single-instance tenant-wide Kubeflow MPI Operator service (mpi-operator), which facilitates Uber's Horovod distributed deep-learning framework. Horovod, which is already preinstalled as part of the platform's Jupyter Notebook service, is widely used for creating machine-learning models that are trained simultaneously over multiple GPUs or CPUs. For more information about using the Horovod to run applications over GPUs, see Running Applications over GPUs.
See Also Running Applications over GPUs Working with Services The Jupyter Notebook Service</description></item><item><title>The Presto Service</title><link>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/presto/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/presto/</guid><description>Presto is an open-source distributed SQL query engine for running interactive analytic queries. The platform has a pre-deployed tenant-wide Presto service that can be used to run SQL queries and perform high-performance low-latency interactive data analytics. You can ingest data into the platform using your preferred method — such as using Spark, the NoSQL Web API, a Nuclio function, or V3IO Frames — and use Presto to analyze the data interactively with the aid of your preferred visualization tool.</description></item><item><title>The Spark Service</title><link>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/spark/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/spark/</guid><description>The platform is integrated with the Apache Spark data engine for large-scale data processing, which is available as a user application service. You can use Spark together with other platform services to run SQL queries, stream data, and perform complex data analysis — both on data that is stored in the platform's data store and on external data sources such as RDBMSs or traditional Hadoop &amp;quot;data lakes&amp;quot;. The support for Spark is powered by a stack of Spark libraries that include Spark SQL and DataFrames for working with structured data, Spark Streaming for streaming data, MLlib for machine learning, and GraphX for graphs and graph-parallel computation.</description></item><item><title>The Tensorboard Service</title><link>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/tensorboard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/tensorboard/</guid><description>The platform a service for Tensorboard which is TensorFlow's visualization toolkit. In machine learning, to improve something you often need to be able to measure it. TensorBoard is a tool for providing the measurements and visualizations needed during the machine learning workflow. It enables tracking experiment metrics like loss and accuracy, visualizing the model graph, projecting embeddings to a lower dimensional space, and much more.
The platform writes the outputs of jobs in a TensorBoard log file which allows users to view and compare results and neural networks.</description></item><item><title>The V3IO Frames Service</title><link>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/frames/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/frames/</guid><description>Iguazio V3IO Frames is multi-model open-source data-access library that provides a unified high-performance Python DataFrame API for working with NoSQL, stream, and time-series (TSDB) data in the platform's data store. For more information and detailed usage instructions, see the Frames API reference. As indicated in this reference, you can find many examples of using the Frames API in the platform's tutorial Jupyter notebooks; see specifically the frames.ipynb notebook. See also the Frames restrictions in the Software Specifications and Restrictions documentation.</description></item><item><title>The Web-Shell Service</title><link>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/web-shell/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/web-shell/</guid><description>The platform includes a web-based command-line shell (&amp;quot;web shell&amp;quot;) service for running application services and performing basic file-system operations from a web browser. For example, you can use the Presto CLI to run SQL queries on your data; use the TSDB CLI to work with TSDBs; use spark-submit to run Spark jobs; run local and Hadoop file-system commands; or use kubectl CLI to run commands against the platform's application clusters.</description></item><item><title>Time-Series Database (TSDB) Services</title><link>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/tsdb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://github.com/jasonnIguazio/ghpages-doc-site/services/app-services/tsdb/</guid><description>Time-series databases (TSDBs) are used for storing time-series data — a series of time-based data points. The platform features enhanced built-in support for working with TSDBs, which includes a rich set of features for efficiently analyzing and storing time series data. The platform uses the Iguazio V3IO TSDB open-source library, which exposes a high-performance API for working with TSDBs — including creating and deleting TSDB instances (tables) and ingesting and consuming (querying) TSDB data.</description></item></channel></rss>